;int i = 2;
PUSH 1
LOADL 2
STORE (1) 0[SB]
;int j = 3;
PUSH 1
LOADL 3
STORE (1) 1[SB]
;fr.n7.stl.block.ast.expression.accessible.VariableAccess@2a2d45ba
;(j * 3)
;((j * 3) + (1 / 2))
; i  = ((j * 3) + (1 / 2));
LOAD (1) 1[SB]
LOADL 3
SUBR IMul
;(1 / 2)
LOADL 1
LOADL 2
SUBR IDiv
SUBR IAdd
LOADA 0[SB]
STOREI (1)
;int k = (c + 1);
PUSH 1
;fr.n7.stl.block.ast.expression.accessible.ConstantAccess@2a5ca609
;(c + 1)
LOADL 5
LOADL 1
SUBR IAdd
STORE (1) 2[SB]
;char a = 'a';
PUSH 1
LOADL 97
STORE (1) 3[SB]
;boolean vrai = (((k == 6) || (1 != 3)) && (a == 'a'));
PUSH 1
;fr.n7.stl.block.ast.expression.accessible.VariableAccess@20e2cbe0
;(k == 6)
;((k == 6) || (1 != 3))
;(((k == 6) || (1 != 3)) && (a == 'a'))
LOAD (1) 2[SB]
LOADL 6
SUBR IEq
;(1 != 3)
LOADL 1
LOADL 3
SUBR INeq
SUBR BOr
;fr.n7.stl.block.ast.expression.accessible.VariableAccess@68be2bc2
;(a == 'a')
LOAD (1) 3[SB]
LOADL 97
SUBR IEq
SUBR BAnd
STORE (1) 4[SB]
;fr.n7.stl.block.ast.expression.accessible.VariableAccess@28feb3fa
;print vrai;
LOAD (1) 4[SB]
SUBR BOut
POP (0) 5
HALT

