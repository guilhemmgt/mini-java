;(Truc []) t = new Truc[ 5 ];
PUSH 1
;new Truc[ 5 ]
LOADL 5
LOADL 7
SUBR IMul
SUBR MAlloc
STORE (1) 0[SB]
; t [ 2 ] = { 1 ,'a' ,< 2, < 3, 4>> ,5 ,true };
LOADL 1
LOADL 97
LOADL 2
LOADL 3
LOADL 4
LOADL 5
LOADL 1
;ArrayAssignement:  t [ 2 ]
LOADA 0[SB]
LOADI (1)
LOADL 2
LOADL 7
SUBR IMul
SUBR IAdd
STOREI (7)
;int pa = t[ 2 ].a;
PUSH 1
;fr.n7.stl.block.ast.expression.accessible.VariableAccess@3c0ecd4b
;ArrayAccess: t[ 2 ]
LOAD (1) 0[SB]
LOADL 2
LOADL 7
SUBR IMul
SUBR IAdd
LOADI (7)
POP (0) 6
POP (1) 0
STORE (1) 1[SB]
;char pb = t[ 2 ].b;
PUSH 1
;fr.n7.stl.block.ast.expression.accessible.VariableAccess@14bf9759
;ArrayAccess: t[ 2 ]
LOAD (1) 0[SB]
LOADL 2
LOADL 7
SUBR IMul
SUBR IAdd
LOADI (7)
POP (0) 5
POP (1) 1
STORE (1) 2[SB]
;< int, < int, int>> pc = t[ 2 ].c;
PUSH 3
;fr.n7.stl.block.ast.expression.accessible.VariableAccess@5f341870
;ArrayAccess: t[ 2 ]
LOAD (1) 0[SB]
LOADL 2
LOADL 7
SUBR IMul
SUBR IAdd
LOADI (7)
POP (0) 2
POP (3) 2
STORE (3) 3[SB]
;int pc1 = (fst pc);
PUSH 1
;fr.n7.stl.block.ast.expression.accessible.VariableAccess@553f17c
;(fst pc)
LOAD (3) 3[SB]
POP (0) 2
STORE (1) 6[SB]
;int pc2 = (fst (sndpc));
PUSH 1
;fr.n7.stl.block.ast.expression.accessible.VariableAccess@4f7d0008
;(sndpc)
;(fst (sndpc))
LOAD (3) 3[SB]
POP (2) 1
POP (0) 1
STORE (1) 7[SB]
;int pc3 = (snd(sndpc));
PUSH 1
;fr.n7.stl.block.ast.expression.accessible.VariableAccess@271053e1
;(sndpc)
;(snd(sndpc))
LOAD (3) 3[SB]
POP (2) 1
POP (1) 1
STORE (1) 8[SB]
;int pd = t[ 2 ].d;
PUSH 1
;fr.n7.stl.block.ast.expression.accessible.VariableAccess@589838eb
;ArrayAccess: t[ 2 ]
LOAD (1) 0[SB]
LOADL 2
LOADL 7
SUBR IMul
SUBR IAdd
LOADI (7)
POP (0) 1
POP (1) 5
STORE (1) 9[SB]
;boolean pe = t[ 2 ].e;
PUSH 1
;fr.n7.stl.block.ast.expression.accessible.VariableAccess@42dafa95
;ArrayAccess: t[ 2 ]
LOAD (1) 0[SB]
LOADL 2
LOADL 7
SUBR IMul
SUBR IAdd
LOADI (7)
POP (0) 0
POP (1) 6
STORE (1) 10[SB]
;fr.n7.stl.block.ast.expression.accessible.VariableAccess@6500df86
;(pa == 1)
;((pa == 1) && (pb == 'a'))
;(((pa == 1) && (pb == 'a')) && (pc1 == 2))
;((((pa == 1) && (pb == 'a')) && (pc1 == 2)) && (pc2 == 3))
;(((((pa == 1) && (pb == 'a')) && (pc1 == 2)) && (pc2 == 3)) && (pc3 == 4))
;((((((pa == 1) && (pb == 'a')) && (pc1 == 2)) && (pc2 == 3)) && (pc3 == 4)) && (pd == 5))
;(((((((pa == 1) && (pb == 'a')) && (pc1 == 2)) && (pc2 == 3)) && (pc3 == 4)) && (pd == 5)) && (pe == true))
;print (((((((pa == 1) && (pb == 'a')) && (pc1 == 2)) && (pc2 == 3)) && (pc3 == 4)) && (pd == 5)) && (pe == true));
LOAD (1) 1[SB]
LOADL 1
SUBR IEq
;fr.n7.stl.block.ast.expression.accessible.VariableAccess@402a079c
;(pb == 'a')
LOAD (1) 2[SB]
LOADL 97
SUBR IEq
SUBR BAnd
;fr.n7.stl.block.ast.expression.accessible.VariableAccess@59ec2012
;(pc1 == 2)
LOAD (1) 6[SB]
LOADL 2
SUBR IEq
SUBR BAnd
;fr.n7.stl.block.ast.expression.accessible.VariableAccess@4cf777e8
;(pc2 == 3)
LOAD (1) 7[SB]
LOADL 3
SUBR IEq
SUBR BAnd
;fr.n7.stl.block.ast.expression.accessible.VariableAccess@2f686d1f
;(pc3 == 4)
LOAD (1) 8[SB]
LOADL 4
SUBR IEq
SUBR BAnd
;fr.n7.stl.block.ast.expression.accessible.VariableAccess@3fee9989
;(pd == 5)
LOAD (1) 9[SB]
LOADL 5
SUBR IEq
SUBR BAnd
;fr.n7.stl.block.ast.expression.accessible.VariableAccess@73ad2d6
;(pe == true)
LOAD (1) 10[SB]
LOADL 1
SUBR IEq
SUBR BAnd
SUBR BOut
POP (0) 11
HALT

