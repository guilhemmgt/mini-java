;int a = 0;
PUSH 1
LOADL 0
STORE (1) 0[SB]
;int b = 4;
PUSH 1
LOADL 4
STORE (1) 1[SB]
;fr.n7.stl.block.ast.expression.accessible.VariableAccess@10f87f48
;(b == (- 1))
;if else
LOAD (1) 1[SB]
;(- 1)
LOADL 1
SUBR INeg
SUBR IEq
JUMPIF (0) else15
; a  = 1;
LOADL 1
LOADA 0[SB]
STOREI (1)
;fr.n7.stl.block.ast.expression.accessible.VariableAccess@b4c966a
;(b == (- 1))
;if
LOAD (1) 1[SB]
;(- 1)
LOADL 1
SUBR INeg
SUBR IEq
JUMPIF (0) endif16
; a  = 2;
LOADL 2
LOADA 0[SB]
STOREI (1)
POP (0) 0
endif16
POP (0) 0
JUMP endif15
else15
; a  = 4;
LOADL 4
LOADA 0[SB]
STOREI (1)
;if
LOADL 0
JUMPIF (0) endif17
;if
LOADL 1
JUMPIF (0) endif18
POP (0) 0
endif18
POP (0) 0
endif17
;fr.n7.stl.block.ast.expression.accessible.VariableAccess@2f4d3709
;(a == 4)
;if else
LOAD (1) 0[SB]
LOADL 4
SUBR IEq
JUMPIF (0) else19
; a  = 3;
LOADL 3
LOADA 0[SB]
STOREI (1)
POP (0) 0
JUMP endif19
else19
POP (0) 0
endif19
POP (0) 0
endif15
;fr.n7.stl.block.ast.expression.accessible.VariableAccess@4e50df2e
;(a == 3)
;((a == 3) && (b == 4))
;print ((a == 3) && (b == 4));
LOAD (1) 0[SB]
LOADL 3
SUBR IEq
;fr.n7.stl.block.ast.expression.accessible.VariableAccess@1d81eb93
;(b == 4)
LOAD (1) 1[SB]
LOADL 4
SUBR IEq
SUBR BAnd
SUBR BOut
POP (0) 2
HALT

